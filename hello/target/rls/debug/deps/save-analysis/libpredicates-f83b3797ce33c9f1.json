{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1","program":"/Users/davekanter/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","predicates","--edition=2018","/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"diff\"","--cfg","feature=\"difflib\"","-C","metadata=f83b3797ce33c9f1","-C","extra-filename=-f83b3797ce33c9f1","--out-dir","/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps","-L","dependency=/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps","--extern","difflib=/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps/libdifflib-2d14f269f1f2972a.rmeta","--extern","itertools=/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps/libitertools-142e71a42e7ddc30.rmeta","--extern","predicates_core=/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps/libpredicates_core-b41a703b3fbddbc5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/davekanter/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/davekanter/Documents/Dave/command-line-rust-solutions/hello/target/rls/debug/deps/libpredicates-f83b3797ce33c9f1.rmeta"},"prelude":{"crate_id":{"name":"predicates","disambiguator":[7274919105307228454,0]},"crate_root":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src","external_crates":[{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","num":20,"id":{"name":"predicates_core","disambiguator":[1111582910181831337,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","num":21,"id":{"name":"difflib","disambiguator":[4692743933448818894,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","num":22,"id":{"name":"itertools","disambiguator":[15758635004892491954,0]}},{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","num":23,"id":{"name":"either","disambiguator":[10613622838307838072,0]}}],"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":363,"byte_end":9534,"line_start":9,"line_end":226,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":9994,"byte_end":10013,"line_start":11,"line_end":11,"column_start":25,"column_end":44},"alias_span":null,"name":"PredicateBooleanExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10037,"byte_end":10052,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"alias_span":null,"name":"PredicateBoxExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10075,"byte_end":10091,"line_start":13,"line_end":13,"column_start":22,"column_end":38},"alias_span":null,"name":"PredicateNameExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10114,"byte_end":10137,"line_start":14,"line_end":14,"column_start":22,"column_end":45},"alias_span":null,"name":"PredicateFileContentExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10159,"byte_end":10174,"line_start":15,"line_end":15,"column_start":21,"column_end":36},"alias_span":null,"name":"PredicateStrExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":20,"index":7},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10191,"byte_end":10200,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"alias_span":null,"name":"Predicate","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10312,"byte_end":10318,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"alias_span":null,"name":"always","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10320,"byte_end":10325,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"alias_span":null,"name":"never","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10357,"byte_end":10365,"line_start":22,"line_end":22,"column_start":30,"column_end":38},"alias_span":null,"name":"function","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10393,"byte_end":10400,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"alias_span":null,"name":"in_hash","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10402,"byte_end":10409,"line_start":23,"line_end":23,"column_start":36,"column_end":43},"alias_span":null,"name":"in_iter","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10437,"byte_end":10439,"line_start":24,"line_end":24,"column_start":26,"column_end":28},"alias_span":null,"name":"eq","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10441,"byte_end":10443,"line_start":24,"line_end":24,"column_start":30,"column_end":32},"alias_span":null,"name":"ge","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10445,"byte_end":10447,"line_start":24,"line_end":24,"column_start":34,"column_end":36},"alias_span":null,"name":"gt","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10449,"byte_end":10451,"line_start":24,"line_end":24,"column_start":38,"column_end":40},"alias_span":null,"name":"le","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10453,"byte_end":10455,"line_start":24,"line_end":24,"column_start":42,"column_end":44},"alias_span":null,"name":"lt","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10457,"byte_end":10459,"line_start":24,"line_end":24,"column_start":46,"column_end":48},"alias_span":null,"name":"ne","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10620,"byte_end":10628,"line_start":30,"line_end":30,"column_start":29,"column_end":37},"alias_span":null,"name":"is_empty","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":797},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10659,"byte_end":10667,"line_start":31,"line_end":31,"column_start":30,"column_end":38},"alias_span":null,"name":"contains","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":776},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10669,"byte_end":10678,"line_start":31,"line_end":31,"column_start":40,"column_end":49},"alias_span":null,"name":"ends_with","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10680,"byte_end":10691,"line_start":31,"line_end":31,"column_start":51,"column_end":62},"alias_span":null,"name":"starts_with","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10756,"byte_end":10760,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"alias_span":null,"name":"diff","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11000,"byte_end":11007,"line_start":44,"line_end":44,"column_start":30,"column_end":37},"alias_span":null,"name":"eq_file","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11039,"byte_end":11045,"line_start":45,"line_end":45,"column_start":31,"column_end":37},"alias_span":null,"name":"exists","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11047,"byte_end":11054,"line_start":45,"line_end":45,"column_start":39,"column_end":46},"alias_span":null,"name":"missing","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11087,"byte_end":11093,"line_start":46,"line_end":46,"column_start":31,"column_end":37},"alias_span":null,"name":"is_dir","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11095,"byte_end":11102,"line_start":46,"line_end":46,"column_start":39,"column_end":46},"alias_span":null,"name":"is_file","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11104,"byte_end":11114,"line_start":46,"line_end":46,"column_start":48,"column_end":58},"alias_span":null,"name":"is_symlink","value":"","parent":{"krate":0,"index":76}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9237,"byte_end":9238,"line_start":205,"line_end":205,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"reflection, Predicate","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9273,"byte_end":9274,"line_start":207,"line_end":207,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58615,"byte_end":58621,"line_start":14,"line_end":14,"column_start":27,"column_end":33},"alias_span":null,"name":"exists","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58623,"byte_end":58630,"line_start":14,"line_end":14,"column_start":35,"column_end":42},"alias_span":null,"name":"missing","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58632,"byte_end":58650,"line_start":14,"line_end":14,"column_start":44,"column_end":62},"alias_span":null,"name":"ExistencePredicate","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58680,"byte_end":58686,"line_start":16,"line_end":16,"column_start":20,"column_end":26},"alias_span":null,"name":"is_dir","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58688,"byte_end":58695,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"alias_span":null,"name":"is_file","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58697,"byte_end":58707,"line_start":16,"line_end":16,"column_start":37,"column_end":47},"alias_span":null,"name":"is_symlink","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58709,"byte_end":58726,"line_start":16,"line_end":16,"column_start":49,"column_end":66},"alias_span":null,"name":"FileTypePredicate","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58756,"byte_end":58776,"line_start":18,"line_end":18,"column_start":20,"column_end":40},"alias_span":null,"name":"FileContentPredicate","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58778,"byte_end":58801,"line_start":18,"line_end":18,"column_start":42,"column_end":65},"alias_span":null,"name":"PredicateFileContentExt","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58831,"byte_end":58838,"line_start":20,"line_end":20,"column_start":20,"column_end":27},"alias_span":null,"name":"eq_file","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58840,"byte_end":58859,"line_start":20,"line_end":20,"column_start":29,"column_end":48},"alias_span":null,"name":"BinaryFilePredicate","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58861,"byte_end":58877,"line_start":20,"line_end":20,"column_start":50,"column_end":66},"alias_span":null,"name":"StrFilePredicate","value":"","parent":{"krate":0,"index":524}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76613,"byte_end":76614,"line_start":14,"line_end":14,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"contains, starts_with, is_empty, ends_with","parent":{"krate":0,"index":735}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76654,"byte_end":76655,"line_start":16,"line_end":16,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"PredicateStrExt","parent":{"krate":0,"index":735}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76751,"byte_end":76755,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"alias_span":null,"name":"diff","value":"","parent":{"krate":0,"index":735}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76757,"byte_end":76776,"line_start":21,"line_end":21,"column_start":34,"column_end":53},"alias_span":null,"name":"DifferencePredicate","value":"","parent":{"krate":0,"index":735}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":363,"byte_end":9534,"line_start":9,"line_end":226,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":169},{"krate":0,"index":211},{"krate":0,"index":302},{"krate":0,"index":343},{"krate":0,"index":408},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":735},{"krate":0,"index":889},{"krate":0,"index":897},{"krate":0,"index":900}],"decl_id":null,"docs":" Composable first-order predicate functions.","sig":null,"attributes":[{"value":"/ Composable first-order predicate functions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":363,"byte_end":410,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":411,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This library implements an interface to \"predicates\" - boolean-valued","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":415,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ functions of one argument. This allows combinatorial logic to be created and","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":489,"byte_end":569,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ assembled at runtime and then used one or more times for evaluating values.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":570,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ This sort of object is really useful when creating filters and checks that","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":650,"byte_end":728,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ can be changed at runtime with user interaction - it allows a clean","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":729,"byte_end":800,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ separation of concerns where the configuration code can be used to build up","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":801,"byte_end":880,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ a predicate, and then that predicate can be given to the code that does the","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":881,"byte_end":960,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ actual filtering without the filtering code knowing anything about user","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":961,"byte_end":1036,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ configuration. See the examples for how this can work.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1037,"byte_end":1095,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Installation","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1100,"byte_end":1119,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1120,"byte_end":1123,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1124,"byte_end":1158,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1159,"byte_end":1162,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1163,"byte_end":1174,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1175,"byte_end":1193,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ predicates = \"2.1.1\"","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1194,"byte_end":1218,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1219,"byte_end":1226,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1227,"byte_end":1230,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A [prelude] is available to bring in all extension traits as well as providing","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1231,"byte_end":1313,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ `prelude::predicate` which focuses on the 90% case of the API.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1314,"byte_end":1380,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1381,"byte_end":1392,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1393,"byte_end":1424,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1425,"byte_end":1432,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1433,"byte_end":1436,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1437,"byte_end":1452,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1453,"byte_end":1456,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The simplest predicates are [`predicate::always`] and [`predicate::never`], which always","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1457,"byte_end":1549,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"/ returns `true` and always returns `false`, respectively. The values are simply ignored when","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1550,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ evaluating against these predicates:","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1646,"byte_end":1686,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1687,"byte_end":1698,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1699,"byte_end":1730,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1731,"byte_end":1734,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let always_true = predicate::always();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1735,"byte_end":1777,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, always_true.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1778,"byte_end":1821,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ let always_false = predicate::never();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1822,"byte_end":1864,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(false, always_false.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1865,"byte_end":1910,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1911,"byte_end":1918,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1919,"byte_end":1922,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Pre-made predicates are available for types that implement the `PartialOrd` and","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":1923,"byte_end":2006,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"/ `PartialEq` traits. The following example uses `lt`, but `eq`, `ne`, `le`, `gt`,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2007,"byte_end":2091,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"/ `ge` are also available.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2092,"byte_end":2120,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2121,"byte_end":2132,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2133,"byte_end":2164,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2165,"byte_end":2168,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let less_than_ten = predicate::lt(10);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2169,"byte_end":2211,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, less_than_ten.eval(&9));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2212,"byte_end":2257,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, less_than_ten.eval(&11));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2258,"byte_end":2305,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2306,"byte_end":2313,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2314,"byte_end":2317,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Any function over a reference to the desired `Item` that returns `bool`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2318,"byte_end":2393,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ can easily be made into a `Predicate` using the [`predicate::function`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2394,"byte_end":2469,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2470,"byte_end":2483,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2484,"byte_end":2495,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2496,"byte_end":2527,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2528,"byte_end":2531,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let bound = 5;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2532,"byte_end":2550,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ let predicate_fn = predicate::function(|&x| x >= bound);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2551,"byte_end":2611,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"/ let between_5_and_10 = predicate_fn.and(predicate::le(10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2612,"byte_end":2675,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(true, between_5_and_10.eval(&7));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2676,"byte_end":2724,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(false, between_5_and_10.eval(&3));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2725,"byte_end":2774,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2775,"byte_end":2782,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2783,"byte_end":2786,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Predicate` type is actually a trait, and that trait implements a","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2787,"byte_end":2860,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ number of useful combinator functions. For example, evaluating for a value","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2861,"byte_end":2939,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ between two other values can be accomplished as follows:","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":2940,"byte_end":3000,"line_start":76,"line_end":76,"column_start":1,"column_end":61}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3001,"byte_end":3012,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3013,"byte_end":3044,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3045,"byte_end":3048,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let between_5_and_10 = predicate::ge(5).and(predicate::le(10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3049,"byte_end":3116,"line_start":80,"line_end":80,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(true, between_5_and_10.eval(&7));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3117,"byte_end":3165,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(false, between_5_and_10.eval(&11));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3166,"byte_end":3216,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(false, between_5_and_10.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3217,"byte_end":3266,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3267,"byte_end":3274,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3275,"byte_end":3278,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The `Predicate` trait is pretty simple, the core of it is an","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3279,"byte_end":3343,"line_start":86,"line_end":86,"column_start":1,"column_end":65}},{"value":"/ implementation of a `eval` function that takes a single argument and","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3344,"byte_end":3416,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/ returns a `bool`. Implementing a custom `Predicate` still allows all the","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3417,"byte_end":3493,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ usual combinators of the `Predicate` trait to work!","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3494,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ ```rust","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3550,"byte_end":3561,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ use std::fmt;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3562,"byte_end":3579,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3580,"byte_end":3583,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3584,"byte_end":3615,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3616,"byte_end":3619,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ struct IsTheAnswer;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3620,"byte_end":3643,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ impl Predicate<i32> for IsTheAnswer {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3644,"byte_end":3685,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/     fn eval(&self, variable: &i32) -> bool {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3686,"byte_end":3734,"line_start":97,"line_end":97,"column_start":1,"column_end":49}},{"value":"/         *variable == 42","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3735,"byte_end":3762,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3763,"byte_end":3772,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3773,"byte_end":3778,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ impl predicates::reflection::PredicateReflection for IsTheAnswer {}","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3779,"byte_end":3850,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/ impl fmt::Display for IsTheAnswer {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3851,"byte_end":3890,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3891,"byte_end":3953,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/         write!(f, \"var.is_the_answer()\")","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3954,"byte_end":3998,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":3999,"byte_end":4008,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4009,"byte_end":4014,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4015,"byte_end":4018,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(true, IsTheAnswer.eval(&42));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4019,"byte_end":4063,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ let almost_the_answer = IsTheAnswer.or(predicate::in_iter(vec![41, 43]));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4064,"byte_end":4141,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(true, almost_the_answer.eval(&41));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4142,"byte_end":4192,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4193,"byte_end":4200,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4201,"byte_end":4204,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ## Choosing a Predicate","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4205,"byte_end":4232,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4233,"byte_end":4236,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ General predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4237,"byte_end":4259,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/ - [`predicate::always`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4260,"byte_end":4287,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/ - [`predicate::never`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4288,"byte_end":4314,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"/ - [`predicate::function`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4315,"byte_end":4344,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"/ - [`predicate::in_iter`]: Specified value must be in the `Iterator`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4345,"byte_end":4417,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/   - [`predicate::in_iter(...).sort`]: Optimization for repeatedly called predicates.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4418,"byte_end":4506,"line_start":120,"line_end":120,"column_start":1,"column_end":89}},{"value":"/   - [`predicate::in_hash`]: Optimization for repeatedly called predicates.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4507,"byte_end":4585,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ - [`predicate::eq`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4586,"byte_end":4609,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"/   - [`predicate::float::is_close`]: Use this instead of `eq` for floating point values.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4610,"byte_end":4701,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"/ - [`predicate::ne`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4702,"byte_end":4725,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::ge`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4726,"byte_end":4749,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::gt`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4750,"byte_end":4773,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::le`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4774,"byte_end":4797,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::lt`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4798,"byte_end":4821,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::name`]: Improve readability of failure reporting by providing a meaningful name.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4822,"byte_end":4921,"line_start":129,"line_end":129,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4922,"byte_end":4925,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Combinators","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4926,"byte_end":4941,"line_start":131,"line_end":131,"column_start":1,"column_end":16}},{"value":"/ - [`pred_a.and(pred_b)`]: Both predicates must succeed.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":4942,"byte_end":5001,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ - [`pred_a.or(pred_b)`]: One or both predicates must succeed.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5002,"byte_end":5067,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ - [`pred_a.not()`]: The predicate must fail.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5068,"byte_end":5116,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5117,"byte_end":5120,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ `String` predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5121,"byte_end":5144,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ - [`predicate::str::is_empty`]: Specified string must be empty","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5145,"byte_end":5211,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/ - [`str_pred = predicate::path::eq_file(...).utf8`]: Specified string must equal the contents","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5212,"byte_end":5309,"line_start":138,"line_end":138,"column_start":1,"column_end":98}},{"value":"/   of the given file.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5310,"byte_end":5334,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/ - [`predicate::str::diff`]: Same as `eq` except report a diff.  See [`DifferencePredicate`]","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5335,"byte_end":5430,"line_start":140,"line_end":140,"column_start":1,"column_end":96}},{"value":"/   for more features.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5431,"byte_end":5455,"line_start":141,"line_end":141,"column_start":1,"column_end":25}},{"value":"/ - [`predicate::str::starts_with`]: Specified string must start with the given needle.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5456,"byte_end":5545,"line_start":142,"line_end":142,"column_start":1,"column_end":90}},{"value":"/ - [`predicate::str::ends_with`]: Specified string must end with the given needle.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5546,"byte_end":5631,"line_start":143,"line_end":143,"column_start":1,"column_end":86}},{"value":"/ - [`predicate::str::contains`]: Specified string must contain the given needle.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5632,"byte_end":5715,"line_start":144,"line_end":144,"column_start":1,"column_end":84}},{"value":"/   - [`predicate::str::contains(...).count`]: Required number of times the needle must show up.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5716,"byte_end":5814,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ - [`predicate::str::is_match`]: Specified string must match the given regex.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5815,"byte_end":5895,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/   - [`predicate::str::is_match(...).count`]: Required number of times the match must show up.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5896,"byte_end":5993,"line_start":147,"line_end":147,"column_start":1,"column_end":98}},{"value":"/ - [`str_pred.trim`]: Trim whitespace before passing it to `str_pred`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":5994,"byte_end":6067,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"/ - [`str_pred.normalize`]: Normalize the line endings before passing it to `str_pred`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6068,"byte_end":6157,"line_start":149,"line_end":149,"column_start":1,"column_end":90}},{"value":"/ - [`bytes_pred = str_pred.from_utf8()`]: Reuse string predicates in other contexts, like the","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6158,"byte_end":6254,"line_start":150,"line_end":150,"column_start":1,"column_end":97}},{"value":"/   file system.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6255,"byte_end":6273,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6274,"byte_end":6277,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ File system predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6278,"byte_end":6304,"line_start":153,"line_end":153,"column_start":1,"column_end":27}},{"value":"/ - [`predicate::path::exists`]: Specified path must exist on disk.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6305,"byte_end":6374,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ - [`predicate::path::missing`]: Specified path must not exist on disk.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6375,"byte_end":6449,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ - [`predicate::path::is_dir`]: Specified path is a directory.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6450,"byte_end":6515,"line_start":156,"line_end":156,"column_start":1,"column_end":66}},{"value":"/ - [`predicate::path::is_file`]: Specified path is a file.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6516,"byte_end":6577,"line_start":157,"line_end":157,"column_start":1,"column_end":62}},{"value":"/ - [`predicate::path::is_symlink`]: Specified path is a symlink.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6578,"byte_end":6645,"line_start":158,"line_end":158,"column_start":1,"column_end":68}},{"value":"/ - [`path_pred = predicate::path::eq_file`]: Specified path's contents must equal the contents of the given","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6646,"byte_end":6756,"line_start":159,"line_end":159,"column_start":1,"column_end":111}},{"value":"/   file.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6757,"byte_end":6768,"line_start":160,"line_end":160,"column_start":1,"column_end":12}},{"value":"/ - [`path_pred = bytes_pred.from_file_path`]: Specified path's contents must equal the `bytes_pred`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6769,"byte_end":6872,"line_start":161,"line_end":161,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6873,"byte_end":6876,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [`DifferencePredicate`]: crate::str::DifferencePredicate","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6877,"byte_end":6937,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/ [`bytes_pred = str_pred.from_utf8()`]: prelude::PredicateStrExt::from_utf8()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":6938,"byte_end":7018,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ [`path_pred = bytes_pred.from_file_path`]: prelude::PredicateFileContentExt::from_file_path()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7019,"byte_end":7116,"line_start":165,"line_end":165,"column_start":1,"column_end":98}},{"value":"/ [`path_pred = predicate::path::eq_file`]: prelude::predicate::path::eq_file()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7117,"byte_end":7198,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ [`pred_a.and(pred_b)`]: boolean::PredicateBooleanExt::and()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7199,"byte_end":7262,"line_start":167,"line_end":167,"column_start":1,"column_end":64}},{"value":"/ [`pred_a.not())`]: boolean::PredicateBooleanExt::not()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7263,"byte_end":7321,"line_start":168,"line_end":168,"column_start":1,"column_end":59}},{"value":"/ [`pred_a.or(pred_b)`]: boolean::PredicateBooleanExt::or()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7322,"byte_end":7383,"line_start":169,"line_end":169,"column_start":1,"column_end":62}},{"value":"/ [`predicate::always`]: constant::always()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7384,"byte_end":7429,"line_start":170,"line_end":170,"column_start":1,"column_end":46}},{"value":"/ [`predicate::eq`]: ord::eq()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7430,"byte_end":7462,"line_start":171,"line_end":171,"column_start":1,"column_end":33}},{"value":"/ [`predicate::float::is_close`]: prelude::predicate::float::is_close()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7463,"byte_end":7536,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`predicate::function`]: function::function()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7537,"byte_end":7586,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/ [`predicate::ge`]: ord::ge()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7587,"byte_end":7619,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ [`predicate::gt`]: ord::gt()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7620,"byte_end":7652,"line_start":175,"line_end":175,"column_start":1,"column_end":33}},{"value":"/ [`predicate::in_hash`]: iter::in_hash()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7653,"byte_end":7696,"line_start":176,"line_end":176,"column_start":1,"column_end":44}},{"value":"/ [`predicate::in_iter(...).sort`]: iter::InPredicate::sort()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7697,"byte_end":7760,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/ [`predicate::in_iter`]: iter::in_iter()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7761,"byte_end":7804,"line_start":178,"line_end":178,"column_start":1,"column_end":44}},{"value":"/ [`predicate::le`]: ord::le()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7805,"byte_end":7837,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`predicate::lt`]: ord::lt()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7838,"byte_end":7870,"line_start":180,"line_end":180,"column_start":1,"column_end":33}},{"value":"/ [`predicate::name`]: name::PredicateNameExt::name()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7871,"byte_end":7926,"line_start":181,"line_end":181,"column_start":1,"column_end":56}},{"value":"/ [`predicate::ne`]: ord::ne()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7927,"byte_end":7959,"line_start":182,"line_end":182,"column_start":1,"column_end":33}},{"value":"/ [`predicate::never`]: constant::never()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":7960,"byte_end":8003,"line_start":183,"line_end":183,"column_start":1,"column_end":44}},{"value":"/ [`predicate::path::exists`]: prelude::predicate::path::exists()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8004,"byte_end":8071,"line_start":184,"line_end":184,"column_start":1,"column_end":68}},{"value":"/ [`predicate::path::is_dir`]: prelude::predicate::path::is_dir()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8072,"byte_end":8139,"line_start":185,"line_end":185,"column_start":1,"column_end":68}},{"value":"/ [`predicate::path::is_file`]: prelude::predicate::path::is_file()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8140,"byte_end":8209,"line_start":186,"line_end":186,"column_start":1,"column_end":70}},{"value":"/ [`predicate::path::is_symlink`]: prelude::predicate::path::is_symlink()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8210,"byte_end":8285,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/ [`predicate::path::missing`]: prelude::predicate::path::missing()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8286,"byte_end":8355,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ [`predicate::str::contains(...).count`]: str::ContainsPredicate::count()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8356,"byte_end":8432,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ [`predicate::str::contains`]: prelude::predicate::str::contains()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8433,"byte_end":8502,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/ [`predicate::str::diff`]: prelude::predicate::str::diff()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8503,"byte_end":8564,"line_start":191,"line_end":191,"column_start":1,"column_end":62}},{"value":"/ [`predicate::str::ends_with`]: prelude::predicate::str::ends_with()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8565,"byte_end":8636,"line_start":192,"line_end":192,"column_start":1,"column_end":72}},{"value":"/ [`predicate::str::is_empty`]: prelude::predicate::str::is_empty()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8637,"byte_end":8706,"line_start":193,"line_end":193,"column_start":1,"column_end":70}},{"value":"/ [`predicate::str::is_match(...).count`]: str::RegexPredicate::count()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8707,"byte_end":8780,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/ [`predicate::str::is_match`]: prelude::predicate::str::is_match()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8781,"byte_end":8850,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ [`predicate::str::starts_with`]: prelude::predicate::str::starts_with()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8851,"byte_end":8926,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ [`str_pred = predicate::path::eq_file(...).utf8`]: path::BinaryFilePredicate::utf8()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":8927,"byte_end":9015,"line_start":197,"line_end":197,"column_start":1,"column_end":89}},{"value":"/ [`str_pred.normalize`]: prelude::PredicateStrExt::normalize()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9016,"byte_end":9081,"line_start":198,"line_end":198,"column_start":1,"column_end":66}},{"value":"/ [`str_pred.trim`]: prelude::PredicateStrExt::trim()","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9082,"byte_end":9137,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"warn(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9139,"byte_end":9192,"line_start":201,"line_end":201,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22}],"decl_id":null,"docs":" Module that contains the essentials for working with predicates.\n","sig":null,"attributes":[{"value":"/ Module that contains the essentials for working with predicates.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":9900,"byte_end":9968,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10235,"byte_end":10244,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"predicate","qualname":"::prelude::predicate","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":76},{"krate":0,"index":97}],"decl_id":null,"docs":" Predicate factories\n","sig":null,"attributes":[{"value":"/ Predicate factories","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10203,"byte_end":10226,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10586,"byte_end":10589,"line_start":29,"line_end":29,"column_start":13,"column_end":16},"name":"str","qualname":"::prelude::predicate::str","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73}],"decl_id":null,"docs":" `str` Predicate factories","sig":null,"attributes":[{"value":"/ `str` Predicate factories","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10467,"byte_end":10496,"line_start":26,"line_end":26,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10501,"byte_end":10504,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to string handling.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10509,"byte_end":10573,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10964,"byte_end":10968,"line_start":43,"line_end":43,"column_start":13,"column_end":17},"name":"path","qualname":"::prelude::predicate::path","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94}],"decl_id":null,"docs":" `Path` Predicate factories","sig":null,"attributes":[{"value":"/ `Path` Predicate factories","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10846,"byte_end":10876,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10881,"byte_end":10884,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to path handling.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":10889,"byte_end":10951,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":97},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11246,"byte_end":11251,"line_start":52,"line_end":52,"column_start":13,"column_end":18},"name":"float","qualname":"::prelude::predicate::float","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","parent":null,"children":[],"decl_id":null,"docs":" `f64` Predicate factories","sig":null,"attributes":[{"value":"/ `f64` Predicate factories","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11128,"byte_end":11157,"line_start":49,"line_end":49,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11162,"byte_end":11165,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to float handling.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/prelude.rs","byte_start":11170,"byte_end":11233,"line_start":51,"line_end":51,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12003,"byte_end":12015,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"BoxPredicate","qualname":"::boxed::BoxPredicate","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Predicate` that wraps another `Predicate` as a trait object, allowing\n sized storage of predicate types.\n","sig":null,"attributes":[{"value":"/ `Predicate` that wraps another `Predicate` as a trait object, allowing","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":11879,"byte_end":11953,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ sized storage of predicate types.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":11954,"byte_end":11991,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12269,"byte_end":12272,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxPredicate<Item>>::new","value":"pub fn new<P: Predicate<Item>>(P) -> BoxPredicate<Item> where P: Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BoxPredicate`, a wrapper around a dynamically-dispatched\n `Predicate` type with useful trait impls.\n","sig":null,"attributes":[{"value":"/ Creates a new `BoxPredicate`, a wrapper around a dynamically-dispatched","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12132,"byte_end":12207,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ `Predicate` type with useful trait impls.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12212,"byte_end":12257,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13511,"byte_end":13526,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"PredicateBoxExt","qualname":"::boxed::PredicateBoxExt","value":"PredicateBoxExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":139}],"decl_id":null,"docs":" `Predicate` extension for boxing a `Predicate`.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension for boxing a `Predicate`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13449,"byte_end":13500,"line_start":80,"line_end":80,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14485,"byte_end":14490,"line_start":109,"line_end":109,"column_start":8,"column_end":13},"name":"boxed","qualname":"::boxed::PredicateBoxExt::boxed","value":"pub fn boxed(Self) -> BoxPredicate<Item> where Self: Sized + Send + Sync +\n'static","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Returns a `BoxPredicate` wrapper around this `Predicate` type.","sig":null,"attributes":[{"value":"/ Returns a `BoxPredicate` wrapper around this `Predicate` type.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13580,"byte_end":13646,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13651,"byte_end":13654,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns a `BoxPredicate` wrapper around this `Predicate type. The","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13659,"byte_end":13728,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ `BoxPredicate` type has a number of useful properties:","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13733,"byte_end":13791,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13796,"byte_end":13799,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/   - It stores the inner predicate as a trait object, so the type of","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13804,"byte_end":13875,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/     `BoxPredicate` will always be the same even if steps are added or","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13880,"byte_end":13953,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/     removed from the predicate.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13958,"byte_end":13993,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/   - It is a common type, allowing it to be stored in vectors or other","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13998,"byte_end":14071,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/     collection types.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14076,"byte_end":14101,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/   - It implements `Debug` and `Display`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14106,"byte_end":14150,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14155,"byte_end":14158,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14163,"byte_end":14177,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14182,"byte_end":14185,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14190,"byte_end":14197,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14202,"byte_end":14233,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14238,"byte_end":14241,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let predicates = vec![","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14246,"byte_end":14272,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/     predicate::always().boxed(),","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14277,"byte_end":14313,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/     predicate::never().boxed(),","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14318,"byte_end":14353,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ ];","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14358,"byte_end":14364,"line_start":105,"line_end":105,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(true, predicates[0].eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14369,"byte_end":14414,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicates[1].eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14419,"byte_end":14465,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14470,"byte_end":14477,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constant","qualname":"::constant","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Definition of a constant (always true or always false) `Predicate`.\n","sig":null,"attributes":[{"value":"/ Definition of a constant (always true or always false) `Predicate`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15055,"byte_end":15126,"line_start":9,"line_end":9,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15411,"byte_end":15427,"line_start":21,"line_end":21,"column_start":12,"column_end":28},"name":"BooleanPredicate","qualname":"::constant::BooleanPredicate","value":"BooleanPredicate {  }","parent":null,"children":[{"krate":0,"index":924}],"decl_id":null,"docs":" Predicate that always returns a constant (boolean) result.","sig":null,"attributes":[{"value":"/ Predicate that always returns a constant (boolean) result.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15207,"byte_end":15269,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15270,"byte_end":15273,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::always` and `predicate::never` functions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15274,"byte_end":15354,"line_start":19,"line_end":19,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16688,"byte_end":16694,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"always","qualname":"::constant::always","value":"pub fn always() -> BooleanPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that always returns `true`.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that always returns `true`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16250,"byte_end":16307,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16308,"byte_end":16311,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16312,"byte_end":16326,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16327,"byte_end":16330,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16331,"byte_end":16338,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16339,"byte_end":16370,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16371,"byte_end":16374,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::always();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16375,"byte_end":16418,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16419,"byte_end":16463,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(true, predicate_fn.eval(&10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16464,"byte_end":16509,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&15));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16510,"byte_end":16555,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ // Won't work - Predicates can only operate on a single type","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16556,"byte_end":16620,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"/ // assert_eq!(true, predicate_fn.eval(\"hello\"))","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16621,"byte_end":16672,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16673,"byte_end":16680,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":17202,"byte_end":17207,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"never","qualname":"::constant::never","value":"pub fn never() -> BooleanPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that always returns `false`.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that always returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16760,"byte_end":16818,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16819,"byte_end":16822,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16823,"byte_end":16837,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16838,"byte_end":16841,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16842,"byte_end":16849,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16850,"byte_end":16881,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16882,"byte_end":16885,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::never();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16886,"byte_end":16928,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16929,"byte_end":16974,"line_start":75,"line_end":75,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(&10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16975,"byte_end":17021,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(false, predicate_fn.eval(&15));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":17022,"byte_end":17068,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ // Won't work - Predicates can only operate on a single type","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":17069,"byte_end":17133,"line_start":78,"line_end":78,"column_start":1,"column_end":65}},{"value":"/ // assert_eq!(false, predicate_fn.eval(\"hello\"))","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":17134,"byte_end":17186,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":17187,"byte_end":17194,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":169},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::function","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":937},{"krate":0,"index":943},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":208}],"decl_id":null,"docs":" Definition of `Predicate` for wrapping a `Fn(&T) -> bool`\n","sig":null,"attributes":[{"value":"/ Definition of `Predicate` for wrapping a `Fn(&T) -> bool`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":17637,"byte_end":17698,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18006,"byte_end":18017,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FnPredicate","qualname":"::function::FnPredicate","value":"FnPredicate {  }","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"decl_id":null,"docs":" Predicate that wraps a function over a reference that returns a `bool`.\n This type is returned by the `predicate::function` function.\n","sig":null,"attributes":[{"value":"/ Predicate that wraps a function over a reference that returns a `bool`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":17809,"byte_end":17884,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ This type is returned by the `predicate::function` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":17885,"byte_end":17949,"line_start":19,"line_end":19,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18850,"byte_end":18857,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"fn_name","qualname":"<FnPredicate<F, T>>::fn_name","value":"pub fn fn_name(Self, &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a descriptive name for this function.","sig":null,"attributes":[{"value":"/ Provide a descriptive name for this function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18425,"byte_end":18474,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18479,"byte_end":18482,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18487,"byte_end":18501,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18506,"byte_end":18509,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18514,"byte_end":18521,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18526,"byte_end":18557,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18562,"byte_end":18565,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ struct Example {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18570,"byte_end":18590,"line_start":57,"line_end":57,"column_start":5,"column_end":25}},{"value":"/     string: String,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18595,"byte_end":18618,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/     number: i32,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18623,"byte_end":18643,"line_start":59,"line_end":59,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18648,"byte_end":18653,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18658,"byte_end":18661,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let string_check = predicate::function(|x: &Example| x.string == \"hello\")","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18666,"byte_end":18743,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/     .fn_name(\"is_hello\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18748,"byte_end":18777,"line_start":63,"line_end":63,"column_start":5,"column_end":34}},{"value":"/ println!(\"predicate: {}\", string_check);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18782,"byte_end":18826,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18831,"byte_end":18838,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20547,"byte_end":20555,"line_start":131,"line_end":131,"column_start":8,"column_end":16},"name":"function","qualname":"::function::function","value":"pub fn function<F, T>(F) -> FnPredicate<F, T> where F: Fn(&T) -> bool,\nT: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that wraps over the given function. The returned\n type implements `Predicate` and therefore has all combinators available to\n it.","sig":null,"attributes":[{"value":"/ Creates a new predicate that wraps over the given function. The returned","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19763,"byte_end":19839,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ type implements `Predicate` and therefore has all combinators available to","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19840,"byte_end":19918,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ it.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19919,"byte_end":19926,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19927,"byte_end":19930,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19931,"byte_end":19945,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19946,"byte_end":19949,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19950,"byte_end":19957,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19958,"byte_end":19989,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19990,"byte_end":19993,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ struct Example {","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19994,"byte_end":20014,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/     string: String,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20015,"byte_end":20038,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/     number: i32,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20039,"byte_end":20059,"line_start":120,"line_end":120,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20060,"byte_end":20065,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20066,"byte_end":20069,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let string_check = predicate::function(|x: &Example| x.string == \"hello\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20070,"byte_end":20148,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ let number_check = predicate::function(|x: &Example| x.number == 42);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20149,"byte_end":20222,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ let predicate_fn = string_check.and(number_check);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20223,"byte_end":20277,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/ let good_example = Example { string: \"hello\".into(), number: 42 };","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20278,"byte_end":20348,"line_start":126,"line_end":126,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(true, predicate_fn.eval(&good_example));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20349,"byte_end":20404,"line_start":127,"line_end":127,"column_start":1,"column_end":56}},{"value":"/ let bad_example = Example { string: \"goodbye\".into(), number: 0 };","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20405,"byte_end":20475,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(false, predicate_fn.eval(&bad_example));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20476,"byte_end":20531,"line_start":129,"line_end":129,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":20532,"byte_end":20539,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":211},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":259},{"krate":0,"index":265},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":299}],"decl_id":null,"docs":" Definition of `Predicate`s for comparisons of membership in a set.\n","sig":null,"attributes":[{"value":"/ Definition of `Predicate`s for comparisons of membership in a set.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21241,"byte_end":21311,"line_start":9,"line_end":9,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22047,"byte_end":22058,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"InPredicate","qualname":"::iter::InPredicate","value":"InPredicate {  }","parent":null,"children":[{"krate":0,"index":971}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n set, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21473,"byte_end":21551,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ set, otherwise returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21552,"byte_end":21587,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21588,"byte_end":21591,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation places the fewest restrictions on the","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21592,"byte_end":21663,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ underlying `Item` type at the expense of having the least performant","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21664,"byte_end":21736,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ implementation (linear search). If the type to be searched is `Hash + Eq`,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21737,"byte_end":21815,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ it is much more efficient to use `HashableInPredicate` and","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21816,"byte_end":21878,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/ `in_hash`. The implementation-specific predicates will be","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21879,"byte_end":21940,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":21941,"byte_end":21996,"line_start":28,"line_end":28,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23203,"byte_end":23207,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"sort","qualname":"<InPredicate<T>>::sort","value":"pub fn sort(Self) -> OrdInPredicate<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22204,"byte_end":22284,"line_start":41,"line_end":41,"column_start":5,"column_end":85}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22289,"byte_end":22334,"line_start":42,"line_end":42,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22339,"byte_end":22342,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this implementation requires `Item` to be `Ord`. The","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22347,"byte_end":22413,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22418,"byte_end":22483,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22488,"byte_end":22558,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22563,"byte_end":22637,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22642,"byte_end":22645,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22650,"byte_end":22664,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22669,"byte_end":22672,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22677,"byte_end":22684,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22689,"byte_end":22720,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22725,"byte_end":22728,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::in_iter(vec![1, 3, 5]).sort();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22733,"byte_end":22797,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22802,"byte_end":22846,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22851,"byte_end":22896,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22901,"byte_end":22945,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22950,"byte_end":22953,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::in_iter(vec![\"a\", \"c\", \"e\"]).sort();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22958,"byte_end":23028,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23033,"byte_end":23078,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23083,"byte_end":23129,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23134,"byte_end":23179,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23184,"byte_end":23191,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26324,"byte_end":26331,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"in_iter","qualname":"::iter::in_iter","value":"pub fn in_iter<I, T>(I) -> InPredicate<T> where T: PartialEq + fmt::Debug,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25158,"byte_end":25238,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25239,"byte_end":25284,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25285,"byte_end":25288,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation places the fewest restrictions on the","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25289,"byte_end":25360,"line_start":138,"line_end":138,"column_start":1,"column_end":72}},{"value":"/ underlying `Item` type at the expense of having the least performant","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25361,"byte_end":25433,"line_start":139,"line_end":139,"column_start":1,"column_end":73}},{"value":"/ implementation (linear search). If the type to be searched is `Hash + Eq`,","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25434,"byte_end":25512,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ it is much more efficient to use `HashableInPredicate` and","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25513,"byte_end":25575,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/ `in_hash`. The implementation-specific predicates will be","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25576,"byte_end":25637,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/ deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25638,"byte_end":25693,"line_start":143,"line_end":143,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25694,"byte_end":25697,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ If you need to optimize this","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25698,"byte_end":25730,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ - Type is `Ord`, call `sort()` on this predicate.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25731,"byte_end":25784,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/ - Type is `Hash`, replace `in_iter` with `in_hash`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25785,"byte_end":25840,"line_start":147,"line_end":147,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25841,"byte_end":25844,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25845,"byte_end":25859,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25860,"byte_end":25863,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25864,"byte_end":25871,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25872,"byte_end":25903,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25904,"byte_end":25907,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_iter(vec![1, 3, 5]);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25908,"byte_end":25965,"line_start":154,"line_end":154,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":25966,"byte_end":26010,"line_start":155,"line_end":155,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26011,"byte_end":26056,"line_start":156,"line_end":156,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26057,"byte_end":26101,"line_start":157,"line_end":157,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26102,"byte_end":26105,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_iter(vec![\"a\", \"c\", \"e\"]);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26106,"byte_end":26169,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26170,"byte_end":26215,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26216,"byte_end":26262,"line_start":161,"line_end":161,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26263,"byte_end":26308,"line_start":162,"line_end":162,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26309,"byte_end":26316,"line_start":163,"line_end":163,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":27045,"byte_end":27059,"line_start":184,"line_end":184,"column_start":12,"column_end":26},"name":"OrdInPredicate","qualname":"::iter::OrdInPredicate","value":"OrdInPredicate {  }","parent":null,"children":[{"krate":0,"index":991}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n set, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26525,"byte_end":26603,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/ set, otherwise returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26604,"byte_end":26639,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26640,"byte_end":26643,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Ord`. The","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26644,"byte_end":26710,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26711,"byte_end":26776,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26777,"byte_end":26847,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26848,"byte_end":26922,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26923,"byte_end":26926,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::in_iter(...).sort` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":26927,"byte_end":26994,"line_start":182,"line_end":182,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29436,"byte_end":29455,"line_start":263,"line_end":263,"column_start":12,"column_end":31},"name":"HashableInPredicate","qualname":"::iter::HashableInPredicate","value":"HashableInPredicate {  }","parent":null,"children":[{"krate":0,"index":1011}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n `HashSet`, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28914,"byte_end":28992,"line_start":253,"line_end":253,"column_start":1,"column_end":79}},{"value":"/ `HashSet`, otherwise returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28993,"byte_end":29034,"line_start":254,"line_end":254,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29035,"byte_end":29038,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Hash + Eq`. The","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29039,"byte_end":29111,"line_start":256,"line_end":256,"column_start":1,"column_end":73}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29112,"byte_end":29177,"line_start":257,"line_end":257,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29178,"byte_end":29248,"line_start":258,"line_end":258,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29249,"byte_end":29323,"line_start":259,"line_end":259,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29324,"byte_end":29327,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::in_hash` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29328,"byte_end":29385,"line_start":261,"line_end":261,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":299},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32237,"byte_end":32244,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"in_hash","qualname":"::iter::in_hash","value":"pub fn in_hash<I, T>(I) -> HashableInPredicate<T> where T: Hash + Eq +\nfmt::Debug, I: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31338,"byte_end":31418,"line_start":332,"line_end":332,"column_start":1,"column_end":81}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31419,"byte_end":31464,"line_start":333,"line_end":333,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31465,"byte_end":31468,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Hash + Eq`. The","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31469,"byte_end":31541,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31542,"byte_end":31607,"line_start":336,"line_end":336,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31608,"byte_end":31678,"line_start":337,"line_end":337,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31679,"byte_end":31753,"line_start":338,"line_end":338,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31754,"byte_end":31757,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31758,"byte_end":31772,"line_start":340,"line_end":340,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31773,"byte_end":31776,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31777,"byte_end":31784,"line_start":342,"line_end":342,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31785,"byte_end":31816,"line_start":343,"line_end":343,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31817,"byte_end":31820,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_hash(vec![1, 3, 5]);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31821,"byte_end":31878,"line_start":345,"line_end":345,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31879,"byte_end":31923,"line_start":346,"line_end":346,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31924,"byte_end":31969,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":31970,"byte_end":32014,"line_start":348,"line_end":348,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32015,"byte_end":32018,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_hash(vec![\"a\", \"c\", \"e\"]);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32019,"byte_end":32082,"line_start":350,"line_end":350,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32083,"byte_end":32128,"line_start":351,"line_end":351,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32129,"byte_end":32175,"line_start":352,"line_end":352,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32176,"byte_end":32221,"line_start":353,"line_end":353,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":32222,"byte_end":32229,"line_start":354,"line_end":354,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":1029},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340}],"decl_id":null,"docs":" Name predicate expressions.\n","sig":null,"attributes":[{"value":"/ Name predicate expressions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":32822,"byte_end":32853,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33115,"byte_end":33128,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"NamePredicate","qualname":"::name::NamePredicate","value":"NamePredicate {  }","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"decl_id":null,"docs":" Augment an existing predicate with a name.","sig":null,"attributes":[{"value":"/ Augment an existing predicate with a name.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":32946,"byte_end":32992,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":32993,"byte_end":32996,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `PredicateNameExt::name` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":32997,"byte_end":33058,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34635,"byte_end":34651,"line_start":84,"line_end":84,"column_start":11,"column_end":27},"name":"PredicateNameExt","qualname":"::name::PredicateNameExt","value":"PredicateNameExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":339}],"decl_id":null,"docs":" `Predicate` extension that adds naming predicate expressions.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension that adds naming predicate expressions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34559,"byte_end":34624,"line_start":83,"line_end":83,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34965,"byte_end":34969,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"name","qualname":"::name::PredicateNameExt::name","value":"pub fn name(Self, &'static str) -> NamePredicate<Self, Item> where Self: Sized","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Name a predicate expression.","sig":null,"attributes":[{"value":"/ Name a predicate expression.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34705,"byte_end":34737,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34742,"byte_end":34745,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34750,"byte_end":34764,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34769,"byte_end":34772,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34777,"byte_end":34784,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34789,"byte_end":34820,"line_start":93,"line_end":93,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34825,"byte_end":34828,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().name(\"non-empty\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34833,"byte_end":34907,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ println!(\"{}\", predicate_fn);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34912,"byte_end":34945,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34950,"byte_end":34957,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ord","qualname":"::ord","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":1061},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":356},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":1100},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":380},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":382},{"krate":0,"index":388},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406}],"decl_id":null,"docs":" Definition of `Predicate`s for comparisons over `Ord` and `Eq` types.\n","sig":null,"attributes":[{"value":"/ Definition of `Predicate`s for comparisons over `Ord` and `Eq` types.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":35642,"byte_end":35715,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36360,"byte_end":36371,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"EqPredicate","qualname":"::ord::EqPredicate","value":"EqPredicate {  }","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` matches the pre-defined `Eq`\n value, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` matches the pre-defined `Eq`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36125,"byte_end":36201,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ value, otherwise returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36202,"byte_end":36239,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36240,"byte_end":36243,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::{eq, ne}` functions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36244,"byte_end":36303,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38754,"byte_end":38756,"line_start":124,"line_end":124,"column_start":8,"column_end":10},"name":"eq","qualname":"::ord::eq","value":"pub fn eq<T>(T) -> EqPredicate<T> where T: fmt::Debug + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38270,"byte_end":38350,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ equal to a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38351,"byte_end":38384,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38385,"byte_end":38388,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38389,"byte_end":38403,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38404,"byte_end":38407,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38408,"byte_end":38415,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38416,"byte_end":38447,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38448,"byte_end":38451,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::eq(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38452,"byte_end":38492,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38493,"byte_end":38537,"line_start":117,"line_end":117,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38538,"byte_end":38584,"line_start":118,"line_end":118,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38585,"byte_end":38588,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::eq(\"Hello\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38589,"byte_end":38635,"line_start":120,"line_end":120,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38636,"byte_end":38685,"line_start":121,"line_end":121,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38686,"byte_end":38738,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38739,"byte_end":38746,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39237,"byte_end":39239,"line_start":146,"line_end":146,"column_start":8,"column_end":10},"name":"ne","qualname":"::ord::ne","value":"pub fn ne<T>(T) -> EqPredicate<T> where T: PartialEq + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n _not_ equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38901,"byte_end":38981,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ _not_ equal to a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":38982,"byte_end":39021,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39022,"byte_end":39025,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39026,"byte_end":39040,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39041,"byte_end":39044,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39045,"byte_end":39052,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39053,"byte_end":39084,"line_start":140,"line_end":140,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39085,"byte_end":39088,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::ne(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39089,"byte_end":39129,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39130,"byte_end":39175,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&10));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39176,"byte_end":39221,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39222,"byte_end":39229,"line_start":145,"line_end":145,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":40112,"byte_end":40124,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"OrdPredicate","qualname":"::ord::OrdPredicate","value":"OrdPredicate {  }","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` matches the pre-defined `Ord`\n value, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` matches the pre-defined `Ord`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39868,"byte_end":39945,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ value, otherwise returns `false`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39946,"byte_end":39983,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39984,"byte_end":39987,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::{gt, ge, lt, le}` functions.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39988,"byte_end":40055,"line_start":179,"line_end":179,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42795,"byte_end":42797,"line_start":271,"line_end":271,"column_start":8,"column_end":10},"name":"lt","qualname":"::ord::lt","value":"pub fn lt<T>(T) -> OrdPredicate<T> where T: fmt::Debug + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n less than a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42325,"byte_end":42405,"line_start":255,"line_end":255,"column_start":1,"column_end":81}},{"value":"/ less than a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42406,"byte_end":42440,"line_start":256,"line_end":256,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42441,"byte_end":42444,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42445,"byte_end":42459,"line_start":258,"line_end":258,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42460,"byte_end":42463,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42464,"byte_end":42471,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42472,"byte_end":42503,"line_start":261,"line_end":261,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42504,"byte_end":42507,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::lt(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42508,"byte_end":42548,"line_start":263,"line_end":263,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42549,"byte_end":42593,"line_start":264,"line_end":264,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&6));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42594,"byte_end":42639,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42640,"byte_end":42643,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::lt(\"b\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42644,"byte_end":42686,"line_start":267,"line_end":267,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42687,"byte_end":42732,"line_start":268,"line_end":268,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42733,"byte_end":42779,"line_start":269,"line_end":269,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42780,"byte_end":42787,"line_start":270,"line_end":270,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43336,"byte_end":43338,"line_start":294,"line_end":294,"column_start":8,"column_end":10},"name":"le","qualname":"::ord::le","value":"pub fn le<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n less than or equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":42949,"byte_end":43029,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/ less than or equal to a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43030,"byte_end":43076,"line_start":282,"line_end":282,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43077,"byte_end":43080,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43081,"byte_end":43095,"line_start":284,"line_end":284,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43096,"byte_end":43099,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43100,"byte_end":43107,"line_start":286,"line_end":286,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43108,"byte_end":43139,"line_start":287,"line_end":287,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43140,"byte_end":43143,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::le(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43144,"byte_end":43184,"line_start":289,"line_end":289,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43185,"byte_end":43229,"line_start":290,"line_end":290,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43230,"byte_end":43274,"line_start":291,"line_end":291,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&6));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43275,"byte_end":43320,"line_start":292,"line_end":292,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43321,"byte_end":43328,"line_start":293,"line_end":293,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43875,"byte_end":43877,"line_start":317,"line_end":317,"column_start":8,"column_end":10},"name":"ge","qualname":"::ord::ge","value":"pub fn ge<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n greater than or equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43497,"byte_end":43577,"line_start":304,"line_end":304,"column_start":1,"column_end":81}},{"value":"/ greater than or equal to a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43578,"byte_end":43627,"line_start":305,"line_end":305,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43628,"byte_end":43631,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43632,"byte_end":43646,"line_start":307,"line_end":307,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43647,"byte_end":43650,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43651,"byte_end":43658,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43659,"byte_end":43690,"line_start":310,"line_end":310,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43691,"byte_end":43694,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ let predicate = predicate::ge(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43695,"byte_end":43732,"line_start":312,"line_end":312,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(false, predicate.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43733,"byte_end":43775,"line_start":313,"line_end":313,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, predicate.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43776,"byte_end":43817,"line_start":314,"line_end":314,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(true, predicate.eval(&6));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43818,"byte_end":43859,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":43860,"byte_end":43867,"line_start":316,"line_end":316,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44418,"byte_end":44420,"line_start":340,"line_end":340,"column_start":8,"column_end":10},"name":"gt","qualname":"::ord::gt","value":"pub fn gt<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n greater than a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44039,"byte_end":44119,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/ greater than a pre-defined value.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44120,"byte_end":44157,"line_start":328,"line_end":328,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44158,"byte_end":44161,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44162,"byte_end":44176,"line_start":330,"line_end":330,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44177,"byte_end":44180,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44181,"byte_end":44188,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44189,"byte_end":44220,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44221,"byte_end":44224,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::gt(5);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44225,"byte_end":44265,"line_start":335,"line_end":335,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(false, predicate_fn.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44266,"byte_end":44311,"line_start":336,"line_end":336,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44312,"byte_end":44357,"line_start":337,"line_end":337,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&6));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44358,"byte_end":44402,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":44403,"byte_end":44410,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boolean","qualname":"::boolean","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":1143},{"krate":0,"index":1150},{"krate":0,"index":1155},{"krate":0,"index":1160},{"krate":0,"index":1164},{"krate":0,"index":1168},{"krate":0,"index":1174},{"krate":0,"index":1178},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":434},{"krate":0,"index":443},{"krate":0,"index":449},{"krate":0,"index":1183},{"krate":0,"index":1190},{"krate":0,"index":1195},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1208},{"krate":0,"index":1214},{"krate":0,"index":1218},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":467},{"krate":0,"index":476},{"krate":0,"index":482},{"krate":0,"index":1223},{"krate":0,"index":1228},{"krate":0,"index":1232},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":520}],"decl_id":null,"docs":" Definition of boolean logic combinators over `Predicate`s.\n","sig":null,"attributes":[{"value":"/ Definition of boolean logic combinators over `Predicate`s.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":44938,"byte_end":45000,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45287,"byte_end":45299,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"AndPredicate","qualname":"::boolean::AndPredicate","value":"AndPredicate {  }","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149}],"decl_id":null,"docs":" Predicate that combines two `Predicate`s, returning the AND of the results.","sig":null,"attributes":[{"value":"/ Predicate that combines two `Predicate`s, returning the AND of the results.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45093,"byte_end":45172,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45173,"byte_end":45176,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::and` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45177,"byte_end":45230,"line_start":19,"line_end":19,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45956,"byte_end":45959,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<AndPredicate<M1, M2, Item>>::new","value":"pub fn new(M1, M2) -> AndPredicate<M1, M2, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AndPredicate` over predicates `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Create a new `AndPredicate` over predicates `a` and `b`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45884,"byte_end":45944,"line_start":54,"line_end":54,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49595,"byte_end":49606,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"OrPredicate","qualname":"::boolean::OrPredicate","value":"OrPredicate {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" Predicate that combines two `Predicate`s, returning the OR of the results.","sig":null,"attributes":[{"value":"/ Predicate that combines two `Predicate`s, returning the OR of the results.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49403,"byte_end":49481,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49482,"byte_end":49485,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::or` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49486,"byte_end":49538,"line_start":191,"line_end":191,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50259,"byte_end":50262,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<OrPredicate<M1, M2, Item>>::new","value":"pub fn new(M1, M2) -> OrPredicate<M1, M2, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OrPredicate` over predicates `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Create a new `OrPredicate` over predicates `a` and `b`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50188,"byte_end":50247,"line_start":226,"line_end":226,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":53885,"byte_end":53897,"line_start":365,"line_end":365,"column_start":12,"column_end":24},"name":"NotPredicate","qualname":"::boolean::NotPredicate","value":"NotPredicate {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" Predicate that returns a `Predicate` taking the logical NOT of the result.","sig":null,"attributes":[{"value":"/ Predicate that returns a `Predicate` taking the logical NOT of the result.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":53692,"byte_end":53770,"line_start":361,"line_end":361,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":53771,"byte_end":53774,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::not` function.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":53775,"byte_end":53828,"line_start":363,"line_end":363,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54388,"byte_end":54391,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<NotPredicate<M, Item>>::new","value":"pub fn new(M) -> NotPredicate<M, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `NotPredicate` over predicate `inner`.\n","sig":null,"attributes":[{"value":"/ Create a new `NotPredicate` over predicate `inner`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54321,"byte_end":54376,"line_start":393,"line_end":393,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":513},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55577,"byte_end":55596,"line_start":440,"line_end":440,"column_start":11,"column_end":30},"name":"PredicateBooleanExt","qualname":"::boolean::PredicateBooleanExt","value":"PredicateBooleanExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519}],"decl_id":null,"docs":" `Predicate` extension that adds boolean logic.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension that adds boolean logic.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55516,"byte_end":55566,"line_start":439,"line_end":439,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56074,"byte_end":56077,"line_start":455,"line_end":455,"column_start":8,"column_end":11},"name":"and","qualname":"::boolean::PredicateBooleanExt::and","value":"pub fn and<B>(Self, B) -> AndPredicate<Self, B, Item> where\nB: Predicate<Item>, Self: Sized","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Compute the logical AND of two `Predicate` results, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical AND of two `Predicate` results, returning the result.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55650,"byte_end":55727,"line_start":444,"line_end":444,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55732,"byte_end":55735,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55740,"byte_end":55754,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55759,"byte_end":55762,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55767,"byte_end":55774,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55779,"byte_end":55810,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55815,"byte_end":55818,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().and(predicate::always());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55823,"byte_end":55892,"line_start":451,"line_end":451,"column_start":5,"column_end":74}},{"value":"/ let predicate_fn2 = predicate::always().and(predicate::never());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55897,"byte_end":55965,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(true, predicate_fn1.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55970,"byte_end":56015,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn2.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56020,"byte_end":56066,"line_start":454,"line_end":454,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56785,"byte_end":56787,"line_start":476,"line_end":476,"column_start":8,"column_end":10},"name":"or","qualname":"::boolean::PredicateBooleanExt::or","value":"pub fn or<B>(Self, B) -> OrPredicate<Self, B, Item> where B: Predicate<Item>,\nSelf: Sized","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Compute the logical OR of two `Predicate` results, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical OR of two `Predicate` results, returning the result.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56243,"byte_end":56319,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56324,"byte_end":56327,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56332,"byte_end":56346,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56351,"byte_end":56354,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56359,"byte_end":56366,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56371,"byte_end":56402,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56407,"byte_end":56410,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().or(predicate::always());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56415,"byte_end":56483,"line_start":470,"line_end":470,"column_start":5,"column_end":73}},{"value":"/ let predicate_fn2 = predicate::always().or(predicate::never());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56488,"byte_end":56555,"line_start":471,"line_end":471,"column_start":5,"column_end":72}},{"value":"/ let predicate_fn3 = predicate::never().or(predicate::never());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56560,"byte_end":56626,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(true, predicate_fn1.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56631,"byte_end":56676,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn2.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56681,"byte_end":56726,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn3.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56731,"byte_end":56777,"line_start":475,"line_end":475,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57327,"byte_end":57330,"line_start":495,"line_end":495,"column_start":8,"column_end":11},"name":"not","qualname":"::boolean::PredicateBooleanExt::not","value":"pub fn not(Self) -> NotPredicate<Self, Item> where Self: Sized","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" Compute the logical NOT of a `Predicate`, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical NOT of a `Predicate`, returning the result.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":56951,"byte_end":57018,"line_start":484,"line_end":484,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57023,"byte_end":57026,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57031,"byte_end":57045,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57050,"byte_end":57053,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57058,"byte_end":57065,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57070,"byte_end":57101,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57106,"byte_end":57109,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().not();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57114,"byte_end":57164,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/ let predicate_fn2 = predicate::never().not();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57169,"byte_end":57218,"line_start":492,"line_end":492,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(false, predicate_fn1.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57223,"byte_end":57269,"line_start":493,"line_end":493,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn2.eval(&4));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57274,"byte_end":57319,"line_start":494,"line_end":494,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/float/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/float/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Float Predicates","sig":null,"attributes":[{"value":"/ Float Predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/float/mod.rs","byte_start":57906,"byte_end":57926,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/float/mod.rs","byte_start":57927,"byte_end":57930,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains predicates specific to string handling.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/float/mod.rs","byte_start":57931,"byte_end":57995,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732}],"decl_id":null,"docs":" Path Predicates","sig":null,"attributes":[{"value":"/ Path Predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58484,"byte_end":58503,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58504,"byte_end":58507,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains predicates specific to the file system.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/mod.rs","byte_start":58508,"byte_end":58572,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59531,"byte_end":59549,"line_start":20,"line_end":20,"column_start":12,"column_end":30},"name":"ExistencePredicate","qualname":"::path::existence::ExistencePredicate","value":"ExistencePredicate {  }","parent":null,"children":[{"krate":0,"index":1255}],"decl_id":null,"docs":" Predicate that checks if a file is present","sig":null,"attributes":[{"value":"/ Predicate that checks if a file is present","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59339,"byte_end":59385,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59386,"byte_end":59389,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::path::exists` and `predicate::path::missing`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59390,"byte_end":59474,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60817,"byte_end":60823,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"exists","qualname":"::path::existence::exists","value":"pub fn exists() -> ExistencePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path exists.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path exists.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60534,"byte_end":60593,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60594,"byte_end":60597,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60598,"byte_end":60612,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60613,"byte_end":60616,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60617,"byte_end":60624,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60625,"byte_end":60649,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60650,"byte_end":60681,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60682,"byte_end":60685,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::exists();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60686,"byte_end":60735,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60736,"byte_end":60801,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60802,"byte_end":60809,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61195,"byte_end":61202,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"missing","qualname":"::path::existence::missing","value":"pub fn missing() -> ExistencePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path doesn't exist.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path doesn't exist.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60893,"byte_end":60959,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60960,"byte_end":60963,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60964,"byte_end":60978,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60979,"byte_end":60982,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60983,"byte_end":60990,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60991,"byte_end":61015,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61016,"byte_end":61047,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61048,"byte_end":61051,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::missing();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61052,"byte_end":61102,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61103,"byte_end":61179,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":61180,"byte_end":61187,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63012,"byte_end":63029,"line_start":65,"line_end":65,"column_start":12,"column_end":29},"name":"FileTypePredicate","qualname":"::path::ft::FileTypePredicate","value":"FileTypePredicate {  }","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"decl_id":null,"docs":" Predicate that checks the `std::fs::FileType`.","sig":null,"attributes":[{"value":"/ Predicate that checks the `std::fs::FileType`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":62784,"byte_end":62834,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":62835,"byte_end":62838,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::path::is_file`, `predicate::path::is_dir`, and `predicate::path::is_symlink`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":62839,"byte_end":62955,"line_start":63,"line_end":63,"column_start":1,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63281,"byte_end":63293,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"follow_links","qualname":"<FileTypePredicate>::follow_links","value":"pub fn follow_links(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Follow symbolic links.","sig":null,"attributes":[{"value":"/ Follow symbolic links.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63100,"byte_end":63126,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63131,"byte_end":63134,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ When yes is true, symbolic links are followed as if they were normal directories and files.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63139,"byte_end":63234,"line_start":73,"line_end":73,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63239,"byte_end":63242,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Default: disabled.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63247,"byte_end":63269,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63444,"byte_end":63453,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_path","qualname":"<FileTypePredicate>::from_path","value":"pub fn from_path(&path::Path) -> io::Result<FileTypePredicate>","parent":null,"children":[],"decl_id":null,"docs":" Allow to create an `FileTypePredicate` from a `path`\n","sig":null,"attributes":[{"value":"/ Allow to create an `FileTypePredicate` from a `path`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63376,"byte_end":63432,"line_start":81,"line_end":81,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":598},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65949,"byte_end":65956,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"is_file","qualname":"::path::ft::is_file","value":"pub fn is_file() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a file.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a file.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65517,"byte_end":65586,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65587,"byte_end":65590,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65591,"byte_end":65605,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65606,"byte_end":65609,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65610,"byte_end":65617,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65618,"byte_end":65642,"line_start":154,"line_end":154,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65643,"byte_end":65674,"line_start":155,"line_end":155,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65675,"byte_end":65678,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_file();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65679,"byte_end":65729,"line_start":157,"line_end":157,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65730,"byte_end":65795,"line_start":158,"line_end":158,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65796,"byte_end":65855,"line_start":159,"line_end":159,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65856,"byte_end":65933,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65934,"byte_end":65941,"line_start":161,"line_end":161,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":599},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66502,"byte_end":66508,"line_start":182,"line_end":182,"column_start":8,"column_end":14},"name":"is_dir","qualname":"::path::ft::is_dir","value":"pub fn is_dir() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a directory.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a directory.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66066,"byte_end":66140,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66141,"byte_end":66144,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66145,"byte_end":66159,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66160,"byte_end":66163,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66164,"byte_end":66171,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66172,"byte_end":66196,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66197,"byte_end":66228,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66229,"byte_end":66232,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_dir();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66233,"byte_end":66282,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66283,"byte_end":66349,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66350,"byte_end":66408,"line_start":179,"line_end":179,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66409,"byte_end":66486,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66487,"byte_end":66494,"line_start":181,"line_end":181,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":600},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":67056,"byte_end":67066,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"is_symlink","qualname":"::path::ft::is_symlink","value":"pub fn is_symlink() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a symlink.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a symlink.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66617,"byte_end":66689,"line_start":189,"line_end":189,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66690,"byte_end":66693,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66694,"byte_end":66708,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66709,"byte_end":66712,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66713,"byte_end":66720,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66721,"byte_end":66745,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66746,"byte_end":66777,"line_start":195,"line_end":195,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66778,"byte_end":66781,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_symlink();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66782,"byte_end":66835,"line_start":197,"line_end":197,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66836,"byte_end":66902,"line_start":198,"line_end":198,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66903,"byte_end":66962,"line_start":199,"line_end":199,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":66963,"byte_end":67040,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":67041,"byte_end":67048,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68014,"byte_end":68034,"line_start":27,"line_end":27,"column_start":12,"column_end":32},"name":"FileContentPredicate","qualname":"::path::fc::FileContentPredicate","value":"FileContentPredicate {  }","parent":null,"children":[{"krate":0,"index":1303}],"decl_id":null,"docs":" Predicate adapter that converts a `path` predicate to a byte predicate on its content.","sig":null,"attributes":[{"value":"/ Predicate adapter that converts a `path` predicate to a byte predicate on its content.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":67820,"byte_end":67910,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":67911,"byte_end":67914,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.from_path()`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":67915,"byte_end":67957,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":654},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":69896,"byte_end":69919,"line_start":98,"line_end":98,"column_start":11,"column_end":34},"name":"PredicateFileContentExt","qualname":"::path::fc::PredicateFileContentExt","value":"PredicateFileContentExt","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" `Predicate` extension adapting a `slice` Predicate.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension adapting a `slice` Predicate.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":69830,"byte_end":69885,"line_start":97,"line_end":97,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70494,"byte_end":70508,"line_start":116,"line_end":116,"column_start":8,"column_end":22},"name":"from_file_path","qualname":"::path::fc::PredicateFileContentExt::from_file_path","value":"pub fn from_file_path(Self) -> FileContentPredicate<Self>","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Returns a `FileContentPredicate` that adapts `Self` to a file content `Predicate`.","sig":null,"attributes":[{"value":"/ Returns a `FileContentPredicate` that adapts `Self` to a file content `Predicate`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":69976,"byte_end":70062,"line_start":103,"line_end":103,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70067,"byte_end":70070,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70075,"byte_end":70089,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70094,"byte_end":70097,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70102,"byte_end":70109,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70114,"byte_end":70145,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70150,"byte_end":70174,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70179,"byte_end":70182,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().from_utf8().from_file_path();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70187,"byte_end":70272,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"./tests/hello_world\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70277,"byte_end":70351,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"./tests/empty_file\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70356,"byte_end":70430,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70435,"byte_end":70442,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70447,"byte_end":70486,"line_start":115,"line_end":115,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71414,"byte_end":71433,"line_start":26,"line_end":26,"column_start":12,"column_end":31},"name":"BinaryFilePredicate","qualname":"::path::fs::BinaryFilePredicate","value":"BinaryFilePredicate {  }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"decl_id":null,"docs":" Predicate that compares file matches\n","sig":null,"attributes":[{"value":"/ Predicate that compares file matches","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71323,"byte_end":71363,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72292,"byte_end":72296,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"utf8","qualname":"<BinaryFilePredicate>::utf8","value":"pub fn utf8(Self) -> Option<StrFilePredicate>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures complete equality","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures complete equality","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71687,"byte_end":71747,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71752,"byte_end":71755,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71760,"byte_end":71774,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71779,"byte_end":71782,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71787,"byte_end":71794,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71799,"byte_end":71823,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71828,"byte_end":71859,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71864,"byte_end":71867,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let predicate_file = predicate::path::eq_file(Path::new(\"Cargo.toml\")).utf8().unwrap();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71872,"byte_end":71963,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(true, predicate_file.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71968,"byte_end":72035,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"Cargo.lock\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72040,"byte_end":72108,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72113,"byte_end":72174,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72179,"byte_end":72182,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(false, predicate_file.eval(\"Not a real Cargo.toml file content\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72187,"byte_end":72268,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72273,"byte_end":72280,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":708},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74230,"byte_end":74237,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"eq_file","qualname":"::path::fs::eq_file","value":"pub fn eq_file<P: Into<path::PathBuf>>(P) -> BinaryFilePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures complete equality","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures complete equality","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73794,"byte_end":73854,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73855,"byte_end":73858,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73859,"byte_end":73873,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73874,"byte_end":73877,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73878,"byte_end":73885,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73886,"byte_end":73910,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73911,"byte_end":73942,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73943,"byte_end":73946,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let predicate_file = predicate::path::eq_file(Path::new(\"Cargo.toml\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73947,"byte_end":74022,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(true, predicate_file.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74023,"byte_end":74090,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74091,"byte_end":74152,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74153,"byte_end":74214,"line_start":114,"line_end":114,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74215,"byte_end":74222,"line_start":115,"line_end":115,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74542,"byte_end":74558,"line_start":124,"line_end":124,"column_start":12,"column_end":28},"name":"StrFilePredicate","qualname":"::path::fs::StrFilePredicate","value":"StrFilePredicate {  }","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"decl_id":null,"docs":" Predicate that compares string content of files\n","sig":null,"attributes":[{"value":"/ Predicate that compares string content of files","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74440,"byte_end":74491,"line_start":122,"line_end":122,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":735},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":886}],"decl_id":null,"docs":" String Predicates","sig":null,"attributes":[{"value":"/ String Predicates","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76487,"byte_end":76508,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76509,"byte_end":76512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains predicates specific to string handling.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/mod.rs","byte_start":76513,"byte_end":76577,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77652,"byte_end":77668,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"name":"IsEmptyPredicate","qualname":"::str::basics::IsEmptyPredicate","value":"IsEmptyPredicate {  }","parent":null,"children":[],"decl_id":null,"docs":" Predicate that checks for empty strings.","sig":null,"attributes":[{"value":"/ Predicate that checks for empty strings.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77495,"byte_end":77539,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77540,"byte_end":77543,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::is_empty`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77544,"byte_end":77595,"line_start":17,"line_end":17,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":757},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78726,"byte_end":78734,"line_start":57,"line_end":57,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::str::basics::is_empty","value":"pub fn is_empty() -> IsEmptyPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str is empty","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str is empty","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78434,"byte_end":78491,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78492,"byte_end":78495,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78496,"byte_end":78510,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78511,"byte_end":78514,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78515,"byte_end":78522,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78523,"byte_end":78554,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78555,"byte_end":78558,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::is_empty();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78559,"byte_end":78609,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78610,"byte_end":78654,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Food World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78655,"byte_end":78710,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78711,"byte_end":78718,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78929,"byte_end":78948,"line_start":65,"line_end":65,"column_start":12,"column_end":31},"name":"StartsWithPredicate","qualname":"::str::basics::StartsWithPredicate","value":"StartsWithPredicate {  }","parent":null,"children":[{"krate":0,"index":1364}],"decl_id":null,"docs":" Predicate checks start of str","sig":null,"attributes":[{"value":"/ Predicate checks start of str","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78786,"byte_end":78819,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78820,"byte_end":78823,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::starts_with`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78824,"byte_end":78878,"line_start":63,"line_end":63,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":766},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80122,"byte_end":80133,"line_start":106,"line_end":106,"column_start":8,"column_end":19},"name":"starts_with","qualname":"::str::basics::starts_with","value":"pub fn starts_with<P>(P) -> StartsWithPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str starts with `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str starts with `pattern`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79793,"byte_end":79863,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79864,"byte_end":79867,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79868,"byte_end":79882,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79883,"byte_end":79886,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79887,"byte_end":79894,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79895,"byte_end":79926,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79927,"byte_end":79930,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::starts_with(\"Hello\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79931,"byte_end":79991,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79992,"byte_end":80047,"line_start":103,"line_end":103,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80048,"byte_end":80106,"line_start":104,"line_end":104,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80107,"byte_end":80114,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80408,"byte_end":80425,"line_start":119,"line_end":119,"column_start":12,"column_end":29},"name":"EndsWithPredicate","qualname":"::str::basics::EndsWithPredicate","value":"EndsWithPredicate {  }","parent":null,"children":[{"krate":0,"index":1377}],"decl_id":null,"docs":" Predicate checks end of str","sig":null,"attributes":[{"value":"/ Predicate checks end of str","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80269,"byte_end":80300,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80301,"byte_end":80304,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::ends_with`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80305,"byte_end":80357,"line_start":117,"line_end":117,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":776},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81582,"byte_end":81591,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"ends_with","qualname":"::str::basics::ends_with","value":"pub fn ends_with<P>(P) -> EndsWithPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str ends with `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str ends with `pattern`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81260,"byte_end":81328,"line_start":149,"line_end":149,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81329,"byte_end":81332,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81333,"byte_end":81347,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81348,"byte_end":81351,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81352,"byte_end":81359,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81360,"byte_end":81391,"line_start":154,"line_end":154,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81392,"byte_end":81395,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::ends_with(\"World\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81396,"byte_end":81454,"line_start":156,"line_end":156,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81455,"byte_end":81510,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Hello Moon\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81511,"byte_end":81566,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81567,"byte_end":81574,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81868,"byte_end":81885,"line_start":173,"line_end":173,"column_start":12,"column_end":29},"name":"ContainsPredicate","qualname":"::str::basics::ContainsPredicate","value":"ContainsPredicate {  }","parent":null,"children":[{"krate":0,"index":1390}],"decl_id":null,"docs":" Predicate that checks for patterns.","sig":null,"attributes":[{"value":"/ Predicate that checks for patterns.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81723,"byte_end":81762,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81763,"byte_end":81766,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str:contains`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81767,"byte_end":81817,"line_start":171,"line_end":171,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82298,"byte_end":82303,"line_start":189,"line_end":189,"column_start":12,"column_end":17},"name":"count","qualname":"<ContainsPredicate>::count","value":"pub fn count(Self, usize) -> MatchesPredicate","parent":null,"children":[],"decl_id":null,"docs":" Require a specific count of matches.","sig":null,"attributes":[{"value":"/ Require a specific count of matches.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81941,"byte_end":81981,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81986,"byte_end":81989,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81994,"byte_end":82008,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82013,"byte_end":82016,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82021,"byte_end":82028,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82033,"byte_end":82064,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82069,"byte_end":82072,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::contains(\"Two\").count(2);","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82077,"byte_end":82141,"line_start":185,"line_end":185,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"One Two Three Two One\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82146,"byte_end":82211,"line_start":186,"line_end":186,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"One Two Three\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82216,"byte_end":82274,"line_start":187,"line_end":187,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82279,"byte_end":82286,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83442,"byte_end":83458,"line_start":227,"line_end":227,"column_start":12,"column_end":28},"name":"MatchesPredicate","qualname":"::str::basics::MatchesPredicate","value":"MatchesPredicate {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" Predicate that checks for repeated patterns.","sig":null,"attributes":[{"value":"/ Predicate that checks for repeated patterns.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83276,"byte_end":83324,"line_start":223,"line_end":223,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83325,"byte_end":83328,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::contains(...).count`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83329,"byte_end":83391,"line_start":225,"line_end":225,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":797},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85194,"byte_end":85202,"line_start":283,"line_end":283,"column_start":8,"column_end":16},"name":"contains","qualname":"::str::basics::contains","value":"pub fn contains<P>(P) -> ContainsPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str contains `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str contains `pattern`","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84871,"byte_end":84938,"line_start":272,"line_end":272,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84939,"byte_end":84942,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84943,"byte_end":84957,"line_start":274,"line_end":274,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84958,"byte_end":84961,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84962,"byte_end":84969,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84970,"byte_end":85001,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85002,"byte_end":85005,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::contains(\"Two\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85006,"byte_end":85061,"line_start":279,"line_end":279,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"One Two Three\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85062,"byte_end":85119,"line_start":280,"line_end":280,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Four Five Six\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85120,"byte_end":85178,"line_start":281,"line_end":281,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":85179,"byte_end":85186,"line_start":282,"line_end":282,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86034,"byte_end":86047,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"TrimPredicate","qualname":"::str::adapters::TrimPredicate","value":"TrimPredicate {  }","parent":null,"children":[{"krate":0,"index":1418}],"decl_id":null,"docs":" Predicate adaper that trims the variable being tested.","sig":null,"attributes":[{"value":"/ Predicate adaper that trims the variable being tested.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":85877,"byte_end":85935,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":85936,"byte_end":85939,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.trim()`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":85940,"byte_end":85977,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":87058,"byte_end":87071,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"Utf8Predicate","qualname":"::str::adapters::Utf8Predicate","value":"Utf8Predicate {  }","parent":null,"children":[{"krate":0,"index":1440}],"decl_id":null,"docs":" Predicate adaper that converts a `str` predicate to byte predicate.","sig":null,"attributes":[{"value":"/ Predicate adaper that converts a `str` predicate to byte predicate.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86883,"byte_end":86954,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86955,"byte_end":86958,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.from_utf8()`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86959,"byte_end":87001,"line_start":63,"line_end":63,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89359,"byte_end":89374,"line_start":144,"line_end":144,"column_start":11,"column_end":26},"name":"PredicateStrExt","qualname":"::str::adapters::PredicateStrExt","value":"PredicateStrExt","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"decl_id":null,"docs":" `Predicate` extension adapting a `str` Predicate.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension adapting a `str` Predicate.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89295,"byte_end":89348,"line_start":143,"line_end":143,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89799,"byte_end":89803,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"trim","qualname":"::str::adapters::PredicateStrExt::trim","value":"pub fn trim(Self) -> TrimPredicate<Self>","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Returns a `TrimPredicate` that ensures the data passed to `Self` is trimmed.","sig":null,"attributes":[{"value":"/ Returns a `TrimPredicate` that ensures the data passed to `Self` is trimmed.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89430,"byte_end":89510,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89515,"byte_end":89518,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89523,"byte_end":89537,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89542,"byte_end":89545,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89550,"byte_end":89557,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89562,"byte_end":89593,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89598,"byte_end":89601,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().trim();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89606,"byte_end":89663,"line_start":156,"line_end":156,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"    \"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89668,"byte_end":89716,"line_start":157,"line_end":157,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"    Hello    \"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89721,"byte_end":89779,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89784,"byte_end":89791,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90429,"byte_end":90438,"line_start":179,"line_end":179,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::str::adapters::PredicateStrExt::from_utf8","value":"pub fn from_utf8(Self) -> Utf8Predicate<Self>","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Returns a `Utf8Predicate` that adapts `Self` to a `[u8]` `Predicate`.","sig":null,"attributes":[{"value":"/ Returns a `Utf8Predicate` that adapts `Self` to a `[u8]` `Predicate`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89880,"byte_end":89953,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89958,"byte_end":89961,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89966,"byte_end":89980,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89985,"byte_end":89988,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89993,"byte_end":90000,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90005,"byte_end":90036,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90041,"byte_end":90065,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90070,"byte_end":90073,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().from_utf8();","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90078,"byte_end":90146,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(true, predicate_fn.eval(OsStr::new(\"Hello\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90151,"byte_end":90212,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(false, predicate_fn.eval(OsStr::new(\"\")));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90217,"byte_end":90274,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"/ let variable: &[u8] = b\"\";","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90279,"byte_end":90309,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(false, predicate_fn.eval(variable));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90314,"byte_end":90365,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90370,"byte_end":90377,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":90382,"byte_end":90421,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91858,"byte_end":91877,"line_start":19,"line_end":19,"column_start":12,"column_end":31},"name":"DifferencePredicate","qualname":"::str::difference::DifferencePredicate","value":"DifferencePredicate {  }","parent":null,"children":[{"krate":0,"index":1461}],"decl_id":null,"docs":" Predicate that diffs two strings.","sig":null,"attributes":[{"value":"/ Predicate that diffs two strings.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91715,"byte_end":91752,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91753,"byte_end":91756,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::str::diff`.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91757,"byte_end":91807,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":879},"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":94213,"byte_end":94217,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"diff","qualname":"::str::difference::diff","value":"pub fn diff<S>(S) -> DifferencePredicate where S: Into<borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that diffs two strings.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that diffs two strings.","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93762,"byte_end":93815,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93816,"byte_end":93819,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93820,"byte_end":93834,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93835,"byte_end":93838,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93839,"byte_end":93846,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93847,"byte_end":93878,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93879,"byte_end":93882,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::diff(\"Hello World\");","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93883,"byte_end":93942,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93943,"byte_end":93998,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ assert!(predicate_fn.find_case(false, \"Hello World\").is_none());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93999,"byte_end":94067,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye World\"));","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":94068,"byte_end":94126,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/ assert!(predicate_fn.find_case(false, \"Goodbye World\").is_some());","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":94127,"byte_end":94197,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":94198,"byte_end":94205,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12083,"byte_end":12095,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12448,"byte_end":12460,"line_start":36,"line_end":36,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12660,"byte_end":12672,"line_start":45,"line_end":45,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12985,"byte_end":12997,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13155,"byte_end":13167,"line_start":67,"line_end":67,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14661,"byte_end":14662,"line_start":117,"line_end":117,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15490,"byte_end":15506,"line_start":25,"line_end":25,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15790,"byte_end":15806,"line_start":35,"line_end":35,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16049,"byte_end":16065,"line_start":42,"line_end":42,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18171,"byte_end":18182,"line_start":31,"line_end":31,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18272,"byte_end":18283,"line_start":38,"line_end":38,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18357,"byte_end":18368,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18974,"byte_end":18985,"line_start":72,"line_end":72,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19332,"byte_end":19343,"line_start":86,"line_end":86,"column_start":48,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19427,"byte_end":19438,"line_start":93,"line_end":93,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22152,"byte_end":22163,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23422,"byte_end":23433,"line_start":73,"line_end":73,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23943,"byte_end":23954,"line_start":91,"line_end":91,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":24493,"byte_end":24504,"line_start":109,"line_end":109,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":24790,"byte_end":24801,"line_start":119,"line_end":119,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":27164,"byte_end":27178,"line_start":191,"line_end":191,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":27695,"byte_end":27709,"line_start":209,"line_end":209,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28255,"byte_end":28269,"line_start":227,"line_end":227,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28549,"byte_end":28563,"line_start":237,"line_end":237,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29570,"byte_end":29589,"line_start":270,"line_end":270,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30099,"byte_end":30118,"line_start":288,"line_end":288,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30657,"byte_end":30676,"line_start":306,"line_end":306,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30962,"byte_end":30981,"line_start":316,"line_end":316,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33292,"byte_end":33305,"line_start":31,"line_end":31,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33405,"byte_end":33418,"line_start":38,"line_end":38,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33522,"byte_end":33535,"line_start":45,"line_end":45,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33990,"byte_end":34003,"line_start":61,"line_end":61,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34303,"byte_end":34316,"line_start":72,"line_end":72,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":35224,"byte_end":35225,"line_start":110,"line_end":110,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":35904,"byte_end":35909,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36474,"byte_end":36485,"line_start":46,"line_end":46,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37102,"byte_end":37113,"line_start":67,"line_end":67,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37756,"byte_end":37767,"line_start":88,"line_end":88,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37832,"byte_end":37843,"line_start":90,"line_end":90,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39547,"byte_end":39553,"line_start":164,"line_end":164,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":40229,"byte_end":40241,"line_start":189,"line_end":189,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41006,"byte_end":41018,"line_start":212,"line_end":212,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41807,"byte_end":41819,"line_start":235,"line_end":235,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41885,"byte_end":41897,"line_start":237,"line_end":237,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45483,"byte_end":45495,"line_start":32,"line_end":32,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45638,"byte_end":45650,"line_start":40,"line_end":40,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45777,"byte_end":45789,"line_start":48,"line_end":48,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":46152,"byte_end":46164,"line_start":64,"line_end":64,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":47234,"byte_end":47246,"line_start":94,"line_end":94,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":47652,"byte_end":47664,"line_start":109,"line_end":109,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49790,"byte_end":49801,"line_start":204,"line_end":204,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49944,"byte_end":49955,"line_start":212,"line_end":212,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50082,"byte_end":50093,"line_start":220,"line_end":220,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50453,"byte_end":50464,"line_start":236,"line_end":236,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":51534,"byte_end":51545,"line_start":266,"line_end":266,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":51951,"byte_end":51962,"line_start":281,"line_end":281,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54037,"byte_end":54049,"line_start":374,"line_end":374,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54149,"byte_end":54161,"line_start":381,"line_end":381,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54245,"byte_end":54257,"line_start":388,"line_end":388,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54559,"byte_end":54571,"line_start":402,"line_end":402,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55018,"byte_end":55030,"line_start":418,"line_end":418,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55332,"byte_end":55344,"line_start":429,"line_end":429,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57487,"byte_end":57488,"line_start":503,"line_end":503,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59604,"byte_end":59622,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60126,"byte_end":60144,"line_start":43,"line_end":43,"column_start":42,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60171,"byte_end":60189,"line_start":45,"line_end":45,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":61840,"byte_end":61848,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":62515,"byte_end":62523,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63076,"byte_end":63093,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63666,"byte_end":63683,"line_start":90,"line_end":90,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":64923,"byte_end":64940,"line_start":129,"line_end":129,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65184,"byte_end":65201,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68091,"byte_end":68111,"line_start":34,"line_end":34,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68332,"byte_end":68352,"line_start":44,"line_end":44,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68620,"byte_end":68640,"line_start":54,"line_end":54,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68804,"byte_end":68824,"line_start":63,"line_end":63,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70633,"byte_end":70634,"line_start":121,"line_end":121,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71512,"byte_end":71531,"line_start":31,"line_end":31,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72519,"byte_end":72538,"line_start":59,"line_end":59,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72865,"byte_end":72884,"line_start":73,"line_end":73,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73182,"byte_end":73201,"line_start":83,"line_end":83,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73447,"byte_end":73466,"line_start":90,"line_end":90,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74615,"byte_end":74631,"line_start":129,"line_end":129,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74869,"byte_end":74885,"line_start":137,"line_end":137,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75211,"byte_end":75227,"line_start":151,"line_end":151,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75517,"byte_end":75533,"line_start":161,"line_end":161,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75779,"byte_end":75795,"line_start":168,"line_end":168,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77697,"byte_end":77713,"line_start":21,"line_end":21,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78098,"byte_end":78114,"line_start":32,"line_end":32,"column_start":42,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78141,"byte_end":78157,"line_start":34,"line_end":34,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78999,"byte_end":79018,"line_start":69,"line_end":69,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79419,"byte_end":79438,"line_start":80,"line_end":80,"column_start":42,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79465,"byte_end":79484,"line_start":82,"line_end":82,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80476,"byte_end":80493,"line_start":123,"line_end":123,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80892,"byte_end":80909,"line_start":134,"line_end":134,"column_start":42,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80936,"byte_end":80953,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81917,"byte_end":81934,"line_start":177,"line_end":177,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82470,"byte_end":82487,"line_start":197,"line_end":197,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82885,"byte_end":82902,"line_start":208,"line_end":208,"column_start":42,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82929,"byte_end":82946,"line_start":210,"line_end":210,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83527,"byte_end":83543,"line_start":232,"line_end":232,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84267,"byte_end":84283,"line_start":252,"line_end":252,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84525,"byte_end":84541,"line_start":259,"line_end":259,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86122,"byte_end":86135,"line_start":29,"line_end":29,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86461,"byte_end":86474,"line_start":42,"line_end":42,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86741,"byte_end":86754,"line_start":52,"line_end":52,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":87153,"byte_end":87166,"line_start":72,"line_end":72,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":88014,"byte_end":88027,"line_start":99,"line_end":99,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":88873,"byte_end":88886,"line_start":124,"line_end":124,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89153,"byte_end":89166,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":91243,"byte_end":91244,"line_start":204,"line_end":204,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91944,"byte_end":91963,"line_start":23,"line_end":23,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93158,"byte_end":93177,"line_start":58,"line_end":58,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93421,"byte_end":93440,"line_start":65,"line_end":65,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/color.rs","byte_start":95812,"byte_end":95819,"line_start":8,"line_end":8,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/color.rs","byte_start":96839,"byte_end":96844,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97530,"byte_end":97542,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97665,"byte_end":97677,"line_start":31,"line_end":31,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97842,"byte_end":97854,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9202,"byte_end":9209,"line_start":203,"line_end":203,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9304,"byte_end":9312,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9322,"byte_end":9330,"line_start":211,"line_end":211,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":169}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9340,"byte_end":9344,"line_start":212,"line_end":212,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":211}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9354,"byte_end":9358,"line_start":213,"line_end":213,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":302}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9368,"byte_end":9371,"line_start":214,"line_end":214,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":343}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9397,"byte_end":9404,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":408}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9458,"byte_end":9463,"line_start":220,"line_end":220,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":523}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9473,"byte_end":9477,"line_start":221,"line_end":221,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":524}},{"kind":"Mod","span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/lib.rs","byte_start":9487,"byte_end":9490,"line_start":222,"line_end":222,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":735}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12083,"byte_end":12095,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12448,"byte_end":12460,"line_start":36,"line_end":36,"column_start":27,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12660,"byte_end":12672,"line_start":45,"line_end":45,"column_start":48,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":112},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":12985,"byte_end":12997,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":13155,"byte_end":13167,"line_start":67,"line_end":67,"column_start":32,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":112},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boxed.rs","byte_start":14661,"byte_end":14662,"line_start":117,"line_end":117,"column_start":41,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":141},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15490,"byte_end":15506,"line_start":25,"line_end":25,"column_start":40,"column_end":56},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":923},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":15790,"byte_end":15806,"line_start":35,"line_end":35,"column_start":42,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":923},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/constant.rs","byte_start":16049,"byte_end":16065,"line_start":42,"line_end":42,"column_start":23,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18171,"byte_end":18182,"line_start":31,"line_end":31,"column_start":28,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":937},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18272,"byte_end":18283,"line_start":38,"line_end":38,"column_start":28,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":937},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18357,"byte_end":18368,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":18974,"byte_end":18985,"line_start":72,"line_end":72,"column_start":29,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":937},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19332,"byte_end":19343,"line_start":86,"line_end":86,"column_start":48,"column_end":59},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":937},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/function.rs","byte_start":19427,"byte_end":19438,"line_start":93,"line_end":93,"column_start":29,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":937},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":22152,"byte_end":22163,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23422,"byte_end":23433,"line_start":73,"line_end":73,"column_start":26,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":969},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":23943,"byte_end":23954,"line_start":91,"line_end":91,"column_start":30,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":969},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":24493,"byte_end":24504,"line_start":109,"line_end":109,"column_start":45,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":969},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":24790,"byte_end":24801,"line_start":119,"line_end":119,"column_start":26,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":27164,"byte_end":27178,"line_start":191,"line_end":191,"column_start":26,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":989},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":27695,"byte_end":27709,"line_start":209,"line_end":209,"column_start":30,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":989},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28255,"byte_end":28269,"line_start":227,"line_end":227,"column_start":45,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":989},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":28549,"byte_end":28563,"line_start":237,"line_end":237,"column_start":26,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":29570,"byte_end":29589,"line_start":270,"line_end":270,"column_start":26,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1009},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30099,"byte_end":30118,"line_start":288,"line_end":288,"column_start":30,"column_end":49},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1009},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30657,"byte_end":30676,"line_start":306,"line_end":306,"column_start":45,"column_end":64},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1009},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/iter.rs","byte_start":30962,"byte_end":30981,"line_start":316,"line_end":316,"column_start":26,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33292,"byte_end":33305,"line_start":31,"line_end":31,"column_start":31,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33405,"byte_end":33418,"line_start":38,"line_end":38,"column_start":31,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33522,"byte_end":33535,"line_start":45,"line_end":45,"column_start":35,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1029},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":33990,"byte_end":34003,"line_start":61,"line_end":61,"column_start":51,"column_end":64},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1029},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":34303,"byte_end":34316,"line_start":72,"line_end":72,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/name.rs","byte_start":35224,"byte_end":35225,"line_start":110,"line_end":110,"column_start":42,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":341},"to":{"krate":0,"index":337}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":35904,"byte_end":35909,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1061},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":36474,"byte_end":36485,"line_start":46,"line_end":46,"column_start":26,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1077},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37102,"byte_end":37113,"line_start":67,"line_end":67,"column_start":30,"column_end":41},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1077},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37756,"byte_end":37767,"line_start":88,"line_end":88,"column_start":45,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1077},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":37832,"byte_end":37843,"line_start":90,"line_end":90,"column_start":26,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":39547,"byte_end":39553,"line_start":164,"line_end":164,"column_start":23,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":40229,"byte_end":40241,"line_start":189,"line_end":189,"column_start":26,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1120},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41006,"byte_end":41018,"line_start":212,"line_end":212,"column_start":30,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1120},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41807,"byte_end":41819,"line_start":235,"line_end":235,"column_start":45,"column_end":57},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1120},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/ord.rs","byte_start":41885,"byte_end":41897,"line_start":237,"line_end":237,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45483,"byte_end":45495,"line_start":32,"line_end":32,"column_start":36,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45638,"byte_end":45650,"line_start":40,"line_end":40,"column_start":36,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":45777,"byte_end":45789,"line_start":48,"line_end":48,"column_start":20,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":46152,"byte_end":46164,"line_start":64,"line_end":64,"column_start":40,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1143},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":47234,"byte_end":47246,"line_start":94,"line_end":94,"column_start":56,"column_end":68},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1143},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":47652,"byte_end":47664,"line_start":109,"line_end":109,"column_start":37,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49790,"byte_end":49801,"line_start":204,"line_end":204,"column_start":36,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":49944,"byte_end":49955,"line_start":212,"line_end":212,"column_start":36,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50082,"byte_end":50093,"line_start":220,"line_end":220,"column_start":20,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":50453,"byte_end":50464,"line_start":236,"line_end":236,"column_start":40,"column_end":51},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1183},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":51534,"byte_end":51545,"line_start":266,"line_end":266,"column_start":56,"column_end":67},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1183},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":51951,"byte_end":51962,"line_start":281,"line_end":281,"column_start":37,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54037,"byte_end":54049,"line_start":374,"line_end":374,"column_start":31,"column_end":43},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54149,"byte_end":54161,"line_start":381,"line_end":381,"column_start":31,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54245,"byte_end":54257,"line_start":388,"line_end":388,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":54559,"byte_end":54571,"line_start":402,"line_end":402,"column_start":35,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1223},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55018,"byte_end":55030,"line_start":418,"line_end":418,"column_start":51,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1223},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":55332,"byte_end":55344,"line_start":429,"line_end":429,"column_start":32,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/boolean.rs","byte_start":57487,"byte_end":57488,"line_start":503,"line_end":503,"column_start":45,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":513}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":59604,"byte_end":59622,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1254},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60126,"byte_end":60144,"line_start":43,"line_end":43,"column_start":42,"column_end":60},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1254},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/existence.rs","byte_start":60171,"byte_end":60189,"line_start":45,"line_end":45,"column_start":23,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":61840,"byte_end":61848,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":62515,"byte_end":62523,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63076,"byte_end":63093,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":63666,"byte_end":63683,"line_start":90,"line_end":90,"column_start":32,"column_end":49},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1286},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":64923,"byte_end":64940,"line_start":129,"line_end":129,"column_start":42,"column_end":59},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1286},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/ft.rs","byte_start":65184,"byte_end":65201,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68091,"byte_end":68111,"line_start":34,"line_end":34,"column_start":9,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68332,"byte_end":68352,"line_start":44,"line_end":44,"column_start":45,"column_end":65},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1301},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68620,"byte_end":68640,"line_start":54,"line_end":54,"column_start":26,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":68804,"byte_end":68824,"line_start":63,"line_end":63,"column_start":35,"column_end":55},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1301},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fc.rs","byte_start":70633,"byte_end":70634,"line_start":121,"line_end":121,"column_start":37,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":654}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":71512,"byte_end":71531,"line_start":31,"line_end":31,"column_start":6,"column_end":25},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72519,"byte_end":72538,"line_start":59,"line_end":59,"column_start":32,"column_end":51},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1323},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":72865,"byte_end":72884,"line_start":73,"line_end":73,"column_start":26,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1323},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73182,"byte_end":73201,"line_start":83,"line_end":83,"column_start":42,"column_end":61},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1323},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":73447,"byte_end":73466,"line_start":90,"line_end":90,"column_start":23,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74615,"byte_end":74631,"line_start":129,"line_end":129,"column_start":6,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":74869,"byte_end":74885,"line_start":137,"line_end":137,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1337},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75211,"byte_end":75227,"line_start":151,"line_end":151,"column_start":25,"column_end":41},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1337},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75517,"byte_end":75533,"line_start":161,"line_end":161,"column_start":42,"column_end":58},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1337},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/path/fs.rs","byte_start":75779,"byte_end":75795,"line_start":168,"line_end":168,"column_start":23,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":77697,"byte_end":77713,"line_start":21,"line_end":21,"column_start":25,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1351},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78098,"byte_end":78114,"line_start":32,"line_end":32,"column_start":42,"column_end":58},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1351},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78141,"byte_end":78157,"line_start":34,"line_end":34,"column_start":23,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":78999,"byte_end":79018,"line_start":69,"line_end":69,"column_start":25,"column_end":44},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1363},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79419,"byte_end":79438,"line_start":80,"line_end":80,"column_start":42,"column_end":61},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1363},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":79465,"byte_end":79484,"line_start":82,"line_end":82,"column_start":23,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80476,"byte_end":80493,"line_start":123,"line_end":123,"column_start":25,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80892,"byte_end":80909,"line_start":134,"line_end":134,"column_start":42,"column_end":59},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1376},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":80936,"byte_end":80953,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":81917,"byte_end":81934,"line_start":177,"line_end":177,"column_start":6,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82470,"byte_end":82487,"line_start":197,"line_end":197,"column_start":25,"column_end":42},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1389},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82885,"byte_end":82902,"line_start":208,"line_end":208,"column_start":42,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1389},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":82929,"byte_end":82946,"line_start":210,"line_end":210,"column_start":23,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":83527,"byte_end":83543,"line_start":232,"line_end":232,"column_start":25,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1402},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84267,"byte_end":84283,"line_start":252,"line_end":252,"column_start":42,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1402},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/basics.rs","byte_start":84525,"byte_end":84541,"line_start":259,"line_end":259,"column_start":23,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1402},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86122,"byte_end":86135,"line_start":29,"line_end":29,"column_start":28,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1416},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86461,"byte_end":86474,"line_start":42,"line_end":42,"column_start":45,"column_end":58},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1416},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":86741,"byte_end":86754,"line_start":52,"line_end":52,"column_start":26,"column_end":39},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1416},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":87153,"byte_end":87166,"line_start":72,"line_end":72,"column_start":35,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1438},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":88014,"byte_end":88027,"line_start":99,"line_end":99,"column_start":29,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1438},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":88873,"byte_end":88886,"line_start":124,"line_end":124,"column_start":45,"column_end":58},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1438},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":89153,"byte_end":89166,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/adapters.rs","byte_start":91243,"byte_end":91244,"line_start":204,"line_end":204,"column_start":29,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":849}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":91944,"byte_end":91963,"line_start":23,"line_end":23,"column_start":25,"column_end":44},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1460},"to":{"krate":20,"index":7}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93158,"byte_end":93177,"line_start":58,"line_end":58,"column_start":42,"column_end":61},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1460},"to":{"krate":20,"index":23}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/str/difference.rs","byte_start":93421,"byte_end":93440,"line_start":65,"line_end":65,"column_start":23,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1460},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/color.rs","byte_start":95812,"byte_end":95819,"line_start":8,"line_end":8,"column_start":6,"column_end":13},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/color.rs","byte_start":96839,"byte_end":96844,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97530,"byte_end":97542,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97665,"byte_end":97677,"line_start":31,"line_end":31,"column_start":26,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/davekanter/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-2.1.1/src/utils.rs","byte_start":97842,"byte_end":97854,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9680}}]}